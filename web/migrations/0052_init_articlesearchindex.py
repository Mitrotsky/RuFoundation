# Generated by Django 5.1.4 on 2025-08-17 16:44

from django.db import migrations
from tqdm import tqdm
import concurrent.futures

from web import threadvars
from web.models import update_search_index, ArticleVersion, Site


def initialize_search_index(apps, schema_editor):
    # this function has to operate on latest models instead of historical. this is because it invokes render (business logic)
    # if this function ever becomes a problem in migrations, we will need to change it to a flow where it runs post all migrations
    # (via trigger/event or so)

    latest_versions = list(ArticleVersion.objects.prefetch_related('article').order_by('article_id', '-created_at').distinct('article_id'))

    if not latest_versions:
        return

    site = Site.objects.get()

    def worker(version):
        with threadvars.context():
            threadvars.put('current_site', site)
            update_search_index(version)

    with concurrent.futures.ThreadPoolExecutor(max_workers=8) as executor:
        list(tqdm(executor.map(worker, latest_versions), total=len(latest_versions)))


class Migration(migrations.Migration):

    dependencies = [
        ('web', '0051_articlesearchindex'),
    ]

    operations = [
        migrations.RunPython(initialize_search_index, atomic=False, reverse_code=migrations.RunPython.noop)
    ]
